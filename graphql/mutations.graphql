# this is an auto generated file. This will be overwritten
mutation CreateXModelType(
  $email: AWSEmail!
  $title: String!
  $isUpgraded: Int
  $tags: String
) {
  createXModelType(
    email: $email
    title: $title
    isUpgraded: $isUpgraded
    tags: $tags
  ) {
    id
    email
    title
    isUpgraded
    tags
    dateCreated
    dateUpgraded
    dislikesCount
    likesCount
    isReported
    isSpam
    reportsCount
    likers
    dislikers
    reporters
    isLikedByTheUser
    isDislikedByTheUser
    isReportedByTheUser
  }
}
mutation UpdateXModelType(
  $id: ID!
  $title: String!
  $isUpgraded: Int!
  $tags: String!
) {
  updateXModelType(
    id: $id
    title: $title
    isUpgraded: $isUpgraded
    tags: $tags
  ) {
    id
    email
    title
    isUpgraded
    tags
    dateCreated
    dateUpgraded
    dislikesCount
    likesCount
    isReported
    isSpam
    reportsCount
    likers
    dislikers
    reporters
    isLikedByTheUser
    isDislikedByTheUser
    isReportedByTheUser
  }
}
mutation DeleteXModelType($id: ID!, $email: AWSEmail!) {
  deleteXModelType(id: $id, email: $email) {
    id
    email
    title
    isUpgraded
    tags
    dateCreated
    dateUpgraded
    dislikesCount
    likesCount
    isReported
    isSpam
    reportsCount
    likers
    dislikers
    reporters
    isLikedByTheUser
    isDislikedByTheUser
    isReportedByTheUser
  }
}
mutation LikeXModelType($id: ID!, $email: AWSEmail!) {
  likeXModelType(id: $id, email: $email) {
    id
    email
    title
    isUpgraded
    tags
    dateCreated
    dateUpgraded
    dislikesCount
    likesCount
    isReported
    isSpam
    reportsCount
    likers
    dislikers
    reporters
    isLikedByTheUser
    isDislikedByTheUser
    isReportedByTheUser
  }
}
mutation DislikeXModelType($id: ID!, $email: AWSEmail!) {
  dislikeXModelType(id: $id, email: $email) {
    id
    email
    title
    isUpgraded
    tags
    dateCreated
    dateUpgraded
    dislikesCount
    likesCount
    isReported
    isSpam
    reportsCount
    likers
    dislikers
    reporters
    isLikedByTheUser
    isDislikedByTheUser
    isReportedByTheUser
  }
}
mutation ReportXModelType($id: ID!, $email: AWSEmail!) {
  reportXModelType(id: $id, email: $email) {
    id
    email
    title
    isUpgraded
    tags
    dateCreated
    dateUpgraded
    dislikesCount
    likesCount
    isReported
    isSpam
    reportsCount
    likers
    dislikers
    reporters
    isLikedByTheUser
    isDislikedByTheUser
    isReportedByTheUser
  }
}
mutation IncreaseUserCoupens($email: AWSEmail, $numberOfCoupens: String) {
  increaseUserCoupens(email: $email, numberOfCoupens: $numberOfCoupens) {
    statusCode
    body
  }
}
mutation AdminChangeXModelType($id: ID!, $accept: Boolean) {
  adminChangeXModelType(id: $id, accept: $accept) {
    id
    email
    title
    isUpgraded
    tags
    dateCreated
    dateUpgraded
    dislikesCount
    likesCount
    isReported
    isSpam
    reportsCount
    likers
    dislikers
    reporters
    isLikedByTheUser
    isDislikedByTheUser
    isReportedByTheUser
  }
}
mutation SignUpUser($name: String, $email: AWSEmail, $password: String) {
  signUpUser(name: $name, email: $email, password: $password) {
    statusCode
    body
  }
}
mutation ConfirmUserEmail($email: AWSEmail, $confirmationCode: Int) {
  confirmUserEmail(email: $email, confirmationCode: $confirmationCode) {
    statusCode
    body
    token
  }
}
mutation SignInUser($email: AWSEmail, $password: String) {
  signInUser(email: $email, password: $password) {
    statusCode
    body
    token
  }
}
mutation SignUpWith3rdPartyService($email: AWSEmail, $name: String) {
  signUpWith3rdPartyService(email: $email, name: $name) {
    statusCode
    body
  }
}
mutation SendEmailForForgottenPassword($email: AWSEmail) {
  sendEmailForForgottenPassword(email: $email) {
    statusCode
    body
  }
}
mutation ChangePassword($email: AWSEmail, $password: String) {
  changePassword(email: $email, password: $password) {
    statusCode
    body
    token
  }
}
